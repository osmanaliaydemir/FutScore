@page
@model FutScore.Dashboard.Pages.Seasons.IndexModel
@{
    ViewData["Title"] = "Seasons";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">Seasons</h1>
        <button class="btn btn-primary" onclick="openCreateModal()">
            <i class="fas fa-plus"></i> New Season
        </button>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="seasonsTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>League</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Modal -->
<div class="modal fade" id="seasonModal" tabindex="-1" role="dialog" aria-labelledby="seasonModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="seasonModalLabel">Season</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="seasonForm">
                    <input type="hidden" id="seasonId" />
                    <div class="form-group">
                        <label for="seasonName">Season Name</label>
                        <input type="text" class="form-control" id="seasonName" required>
                    </div>
                    <div class="form-group">
                        <label for="leagueId">League</label>
                        <select class="form-control" id="leagueId" required>
                            <option value="">Select League</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="startDate">Start Date</label>
                        <input type="date" class="form-control" id="startDate" required>
                    </div>
                    <div class="form-group">
                        <label for="endDate">End Date</label>
                        <input type="date" class="form-control" id="endDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveSeason()">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let seasonsTable;
        let leagues = [];

        $(document).ready(function() {
            initializeDataTable();
            loadLeagues();
        });

        function initializeDataTable() {
            seasonsTable = $('#seasonsTable').DataTable({
                ajax: {
                    url: '/api/seasons',
                    dataSrc: ''
                },
                columns: [
                    { data: 'seasonName' },
                    { data: 'leagueName' },
                    { 
                        data: 'startDate',
                        render: function(data) {
                            return new Date(data).toLocaleDateString();
                        }
                    },
                    { 
                        data: 'endDate',
                        render: function(data) {
                            return new Date(data).toLocaleDateString();
                        }
                    },
                    { 
                        data: 'status',
                        render: function(data) {
                            return `<span class="badge badge-${data === 'Active' ? 'success' : 'secondary'}">${data}</span>`;
                        }
                    },
                    {
                        data: 'id',
                        render: function(data, type, row) {
                            return `
                                <button class="btn btn-sm btn-primary" onclick="openEditModal(${data})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteSeason(${data})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            `;
                        }
                    }
                ]
            });
        }

        function loadLeagues() {
            $.ajax({
                url: '/api/leagues',
                method: 'GET',
                success: function(data) {
                    leagues = data;
                    const select = $('#leagueId');
                    select.empty();
                    select.append('<option value="">Select League</option>');
                    data.forEach(league => {
                        select.append(`<option value="${league.id}">${league.name}</option>`);
                    });
                }
            });
        }

        function openCreateModal() {
            $('#seasonId').val('');
            $('#seasonForm')[0].reset();
            $('#seasonModalLabel').text('Create Season');
            $('#seasonModal').modal('show');
        }

        function openEditModal(id) {
            $.ajax({
                url: `/api/seasons/${id}`,
                method: 'GET',
                success: function(data) {
                    $('#seasonId').val(data.id);
                    $('#seasonName').val(data.seasonName);
                    $('#leagueId').val(data.leagueId);
                    $('#startDate').val(data.startDate.split('T')[0]);
                    $('#endDate').val(data.endDate.split('T')[0]);
                    $('#seasonModalLabel').text('Edit Season');
                    $('#seasonModal').modal('show');
                }
            });
        }

        function saveSeason() {
            const id = $('#seasonId').val();
            const data = {
                id: id || 0,
                seasonName: $('#seasonName').val(),
                leagueId: parseInt($('#leagueId').val()),
                startDate: $('#startDate').val(),
                endDate: $('#endDate').val()
            };

            const url = id ? `/api/seasons/${id}` : '/api/seasons';
            const method = id ? 'PUT' : 'POST';

            $.ajax({
                url: url,
                method: method,
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function() {
                    $('#seasonModal').modal('hide');
                    seasonsTable.ajax.reload();
                    showToast('success', 'Season saved successfully!');
                },
                error: function(xhr) {
                    showToast('error', xhr.responseJSON?.message || 'An error occurred');
                }
            });
        }

        function deleteSeason(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/api/seasons/${id}`,
                        method: 'DELETE',
                        success: function() {
                            seasonsTable.ajax.reload();
                            showToast('success', 'Season deleted successfully!');
                        },
                        error: function(xhr) {
                            showToast('error', xhr.responseJSON?.message || 'An error occurred');
                        }
                    });
                }
            });
        }

        function showToast(type, message) {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });

            Toast.fire({
                icon: type,
                title: message
            });
        }
    </script>
} 