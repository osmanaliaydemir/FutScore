@page
@model FutScore.Dashboard.Pages.Seasons.IndexModel
@{
    ViewData["Title"] = "Seasons";
}

<input type="hidden" name="__RequestVerificationToken" value="@Html.AntiForgeryToken()" />

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">Seasons</h1>
        <button class="btn btn-primary" onclick="openCreateModal()">
            <i class="fas fa-plus"></i> New Season
        </button>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="seasonsTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Modal -->
<div class="modal fade" id="seasonModal" tabindex="-1" role="dialog" aria-labelledby="seasonModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="seasonModalLabel">Season</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="seasonForm">
                    <input type="hidden" id="seasonId" />
                    <div class="form-group mb-3">
                        <label for="seasonName" class="form-label">Season Name</label>
                        <input type="text" class="form-control" id="seasonName" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveSeason()">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let seasonsTable;
        const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

        $(document).ready(function() {
            initializeDataTable();
        });

        function initializeDataTable() {
            seasonsTable = $('#seasonsTable').DataTable({
                ajax: {
                    url: '?handler=Seasons',
                    type: 'GET',
                    headers: {
                        'RequestVerificationToken': antiForgeryToken
                    },
                    dataSrc: '',
                    error: function(xhr) {
                        showToast('error', 'Failed to load seasons');
                    }
                },
                processing: true,
                serverSide: false,
                columns: [
                    { data: 'seasonName' },
                    { 
                        data: 'startDate',
                        render: function(data) {
                            return data ? new Date(data).toLocaleDateString() : '';
                        }
                    },
                    { 
                        data: 'endDate',
                        render: function(data) {
                            return data ? new Date(data).toLocaleDateString() : '';
                        }
                    },
                    { 
                        data: 'status',
                        render: function(data) {
                            return `<span class="badge bg-${data === 'Active' ? 'success' : 'secondary'}">${data}</span>`;
                        }
                    },
                    {
                        data: 'id',
                        render: function(data, type, row) {
                            return `
                                <button class="btn btn-sm btn-primary" onclick="openEditModal(${data})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteSeason(${data})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            `;
                        }
                    }
                ]
            });
        }

        function openCreateModal() {
            $('#seasonId').val('');
            $('#seasonForm')[0].reset();
            $('#seasonModalLabel').text('Create Season');
            $('#seasonModal').modal('show');
        }

        function openEditModal(id) {
            $.ajax({
                url: `?handler=Season&id=${id}`,
                type: 'GET',
                headers: {
                    'RequestVerificationToken': antiForgeryToken
                },
                success: function(data) {
                    $('#seasonId').val(data.id);
                    $('#seasonName').val(data.seasonName);
                    $('#startDate').val(data.startDate.split('T')[0]);
                    $('#endDate').val(data.endDate.split('T')[0]);
                    $('#seasonModalLabel').text('Edit Season');
                    $('#seasonModal').modal('show');
                },
                error: function() {
                    showToast('error', 'Failed to load season details');
                }
            });
        }

        function saveSeason() {
            if (!validateForm()) return;

            const id = $('#seasonId').val();
            const data = {
                id: id || 0,
                seasonName: $('#seasonName').val(),
                startDate: $('#startDate').val(),
                endDate: $('#endDate').val()
            };

            $.ajax({
                url: id ? '?handler=UpdateSeason' : '?handler=CreateSeason',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': antiForgeryToken
                },
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    if (response.success) {
                        $('#seasonModal').modal('hide');
                        seasonsTable.ajax.reload();
                        showToast('success', `Season ${id ? 'updated' : 'created'} successfully!`);
                    } else {
                        showToast('error', response.message || 'Failed to save season');
                    }
                },
                error: function(xhr) {
                    showToast('error', xhr.responseJSON?.message || 'An error occurred while saving');
                }
            });
        }

        function validateForm() {
            const form = $('#seasonForm')[0];
            if (!form.checkValidity()) {
                form.reportValidity();
                return false;
            }
            return true;
        }

        function deleteSeason(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `?handler=DeleteSeason&id=${id}`,
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': antiForgeryToken
                        },
                        success: function(response) {
                            if (response.success) {
                                seasonsTable.ajax.reload();
                                showToast('success', 'Season deleted successfully!');
                            } else {
                                showToast('error', response.message || 'Failed to delete season');
                            }
                        },
                        error: function(xhr) {
                            showToast('error', xhr.responseJSON?.message || 'Failed to delete season');
                        }
                    });
                }
            });
        }

        function showToast(type, message) {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });

            Toast.fire({
                icon: type,
                title: message
            });
        }
    </script>
} 